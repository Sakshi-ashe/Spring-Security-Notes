cred ( username, password )

the credential are sent. the password is validated via loadByUsername, 
but password has to be encrypted. Taking password from user to backend server in most secure form is important.

Encoding vs Encrypting vs Hashing : 

1. Encoding - Decoding is done to change the format of a input. It is not used to encode passwords as, one can easily decode the algorithm. Ecoding is instead done to 
reducing size of images or videos.

2. Encrypting is more better than encoding as it has a 'key' which has to be passed with input. Without which data cannnot be decoded.
Symmetric encryption -- there is one key both at sender and receiver end. Con- if sender looses the key, the theif can then decode password at receiver's end.
Asymmetric encryption --- there is a public key present to senders. and one private key at receiver end. So if public key is loose or theft ,still the input data 
is not compromised.

3. HAshing - best to encrypt passwords:
an algorith is used for encrypting passwords like MD5, SHA256. but there is nothing like decoding, instead the hashed passwords are saved in DB. When a user login again and sends
his credentials, again the password is hashed and hashed value is compared to value in db already present for that user.

PasswordEncoder interface is used in spring security to handle password encoding, matching.
